PassInput:
  type: object
  properties:
    contractAddress:
      type: string
      description: Contract Address
    tokenId:
      type: string
      description: Token ID
    chainId:
      $ref: "#/components/schemas/ChainId"
    signature:
      type: string
      description: Signed message
    signatureMessage:
      type: string
      description: Message used to request signature
    platform:
      $ref: "#/components/schemas/Platform"
    contractInterface:
      $ref: "#/components/schemas/TokenInterface"
    barcode:
      $ref: "#/components/schemas/BarcodeInput"
      description: Barcode message
    image:
      type: string
      description: Custom image to be displayed on pass. **(Max file size 500kb)**
    templateId:
      type: string
      description: Custom template
    pass:
      anyOf:
        - $ref: "#/components/schemas/PublicApplePass"
        - $ref: "#/components/schemas/PublicGooglePass"
      description: >-
        Customize passes based on platform specifications

        Docs:

        https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/PassKit_PG/Creating.html

        https://developers.google.com/pay/passes/guides/pass-verticals/pass-template
  required:
    - contractAddress
    - tokenId
    - chainId
    - signature
    - signatureMessage
    - platform
  additionalProperties: false
TokenInterface:
  description: Required if smart contract supports both ERC721 & ERC-1155 token standards
  type: string
  enum:
    - "0x80ac58cd"
    - "0xd9b67a26"
ChainId:
  type: number
  enum:
    - 1
    - 42
    - 3
    - 4
    - 5
    - 137
    - 80001
    - 10
    - 69
    - 42161
    - 421611
    - 31337
Platform:
  type: string
  enum:
    - apple
    - google
BarcodeInput:
  type: object
  properties:
    message:
      type: string
    redirect:
      type: object
      properties:
        url:
          type: string
          description: Use this field if you wish to redirect to your own service for verification. A query param named`barcodeSignature` will be appended to the URL provided with the barcode signature.

  required:
    - message
  additionalProperties: false
PublicApplePass:
  type: object
  properties:
    description:
      type: string
    logoText:
      type: string
    labelColor:
      type: string
    backgroundColor:
      type: string
    foregroundColor:
      type: string
    expirationDate:
      type: string
    locations:
      type: array
      items:
        $ref: "#/components/schemas/Location"
    auxiliaryFields:
      type: array
      items:
        $ref: "#/components/schemas/Field"
    backFields:
      type: array
      items:
        $ref: "#/components/schemas/Field"
    headerFields:
      type: array
      items:
        $ref: "#/components/schemas/Field"
    primaryFields:
      type: array
      items:
        $ref: "#/components/schemas/Field"
    secondaryFields:
      type: array
      items:
        $ref: "#/components/schemas/Field"
    appLaunchURL:
      type: string
    associatedStoreIdentifiers:
      type: array
      items:
        type: number
  additionalProperties: false
Location:
  type: object
  properties:
    relevantText:
      type: string
    altitude:
      type: number
    latitude:
      type: number
    longitude:
      type: number
  required:
    - latitude
    - longitude
  additionalProperties: false
Semantics:
  type: object
  properties:
    airlineCode:
      type: string
    artistIDs:
      type: array
      items:
        type: string
    awayTeamAbbreviation:
      type: string
    awayTeamLocation:
      type: string
    awayTeamName:
      type: string
    balance:
      $ref: "#/components/schemas/SemanticTagType.CurrencyAmount"
    boardingGroup:
      type: string
    boardingSequenceNumber:
      type: string
    carNumber:
      type: string
    confirmationNumber:
      type: string
    currentArrivalDate:
      type: string
    currentBoardingDate:
      type: string
    currentDepartureDate:
      type: string
    departureAirportCode:
      type: string
    departureAirportName:
      type: string
    departureGate:
      type: string
    departureLocation:
      $ref: "#/components/schemas/SemanticTagType.Location"
    departureLocationDescription:
      type: string
    departurePlatform:
      type: string
    departureStationName:
      type: string
    departureTerminal:
      type: string
    destinationAirportCode:
      type: string
    destinationAirportName:
      type: string
    destinationGate:
      type: string
    destinationLocation:
      $ref: "#/components/schemas/SemanticTagType.Location"
    destinationLocationDescription:
      type: string
    destinationPlatform:
      type: string
    destinationStationName:
      type: string
    destinationTerminal:
      type: string
    duration:
      type: number
    eventEndDate:
      type: string
    eventName:
      type: string
    eventStartDate:
      type: string
    eventType:
      type: string
      enum:
        - PKEventTypeGeneric
        - PKEventTypeLivePerformance
        - PKEventTypeMovie
        - PKEventTypeSports
        - PKEventTypeConference
        - PKEventTypeConvention
        - PKEventTypeWorkshop
        - PKEventTypeSocialGathering
    flightCode:
      type: string
    flightNumber:
      type: number
    genre:
      type: string
    homeTeamAbbreviation:
      type: string
    homeTeamLocation:
      type: string
    homeTeamName:
      type: string
    leagueAbbreviation:
      type: string
    leagueName:
      type: string
    membershipProgramName:
      type: string
    membershipProgramNumber:
      type: string
    originalArrivalDate:
      type: string
    originalBoardingDate:
      type: string
    originalDepartureDate:
      type: string
    passengerName:
      $ref: "#/components/schemas/SemanticTagType.PersonNameComponents"
    performerNames:
      type: array
      items:
        type: string
    priorityStatus:
      type: string
    seats:
      type: array
      items:
        $ref: "#/components/schemas/SemanticTagType.Seat"
    securityScreening:
      type: string
    silenceRequested:
      type: boolean
    sportName:
      type: string
    totalPrice:
      $ref: "#/components/schemas/SemanticTagType.CurrencyAmount"
    transitProvider:
      type: string
    transitStatus:
      type: string
    transitStatusReason:
      type: string
    vehicleName:
      type: string
    vehicleNumber:
      type: string
    vehicleType:
      type: string
    venueEntrance:
      type: string
    venueLocation:
      $ref: "#/components/schemas/SemanticTagType.Location"
    venueName:
      type: string
    venuePhoneNumber:
      type: string
    venueRoom:
      type: string
    wifiAccess:
      $ref: "#/components/schemas/SemanticTagType.WifiNetwork"
  additionalProperties: false
  description: Alphabetical order
SemanticTagType.CurrencyAmount:
  type: object
  properties:
    currencyCode:
      type: string
    amount:
      type: string
  additionalProperties: false
SemanticTagType.Location:
  type: object
  properties:
    latitude:
      type: number
    longitude:
      type: number
  required:
    - latitude
    - longitude
  additionalProperties: false
SemanticTagType.PersonNameComponents:
  type: object
  properties:
    familyName:
      type: string
    givenName:
      type: string
    middleName:
      type: string
    namePrefix:
      type: string
    nameSuffix:
      type: string
    nickname:
      type: string
    phoneticRepresentation:
      type: string
  additionalProperties: false
SemanticTagType.Seat:
  type: object
  properties:
    seatSection:
      type: string
    seatRow:
      type: string
    seatNumber:
      type: string
    seatIdentifier:
      type: string
    seatType:
      type: string
    seatDescription:
      type: string
  additionalProperties: false
SemanticTagType.WifiNetwork:
  type: object
  properties:
    password:
      type: string
    ssid:
      type: string
  required:
    - password
    - ssid
  additionalProperties: false
Field:
  type: object
  properties:
    # attributedValue:
    #   anyOf:
    #     - type: string
    #     - type: number
    #     - type: string
    #       format: date-time
    # changeMessage:
    #   type: string
    # dataDetectorTypes:
    #   type: array
    #   items:
    #     type: string
    label:
      type: string
    textAlignment:
      type: string
    key:
      type: string
    value:
      anyOf:
        - type: string
        - type: number
        - type: string
          format: date-time
    # semantics:
    #   $ref: "#/components/schemas/Semantics"
    # dateStyle:
    #   type: string
    # ignoresTimeZone:
    #   type: boolean
    # isRelative:
    #   type: boolean
    # timeStyle:
    #   type: string
    # currencyCode:
    #   type: string
    # numberStyle:
    #   type: string
  required:
    - key
    - value
  additionalProperties: false
PublicGooglePass:
  type: object
  properties:
    messages:
      type: array
      items:
        $ref: "#/components/schemas/walletobjects_v1.Schema$Message"
    textModulesData:
      $ref: "#/components/schemas/walletobjects_v1.Schema$TextModuleData"
    linksModuleData:
      $ref: "#/components/schemas/walletobjects_v1.Schema$LinksModuleData"
    locations:
      $ref: "#/components/schemas/walletobjects_v1.Schema$LatLongPoint"
  additionalProperties: false
walletobjects_v1.Schema$Message:
  type: object
  properties:
    body:
      description: The message body.
      anyOf:
        - type: string
        - type: "null"
    displayInterval:
      $ref: "#/components/schemas/walletobjects_v1.Schema$TimeInterval"
      description: >-
        The period of time that the message will be displayed to users. You
        can define both a `startTime` and `endTime` for each message. A
        message is displayed immediately after a Wallet Object is inserted
        unless a `startTime` is set. The message will appear in a list of
        messages indefinitely if `endTime` is not provided.
    header:
      description: The message header.
      anyOf:
        - type: string
        - type: "null"
    id:
      description: >-
        The ID associated with a message. This field is here to enable ease
        of management of messages. Notice ID values could possibly duplicate
        across multiple messages in the same class/instance, and care must
        be taken to select a reasonable ID for each message.
      anyOf:
        - type: string
        - type: "null"
    kind:
      description: >-
        Identifies what kind of resource this is. Value: the fixed string
        `"walletobjects#walletObjectMessage"`.
      anyOf:
        - type: string
        - type: "null"
    localizedBody:
      $ref: "#/components/schemas/walletobjects_v1.Schema$LocalizedString"
      description: Translated strings for the message body.
    localizedHeader:
      $ref: "#/components/schemas/walletobjects_v1.Schema$LocalizedString"
      description: Translated strings for the message header.
    messageType:
      description: "The type of the message. Currently, this can only be set for offers."
      anyOf:
        - type: string
        - type: "null"
  additionalProperties: false
  description: A message that will be displayed with a Valuable
walletobjects_v1.Schema$TimeInterval:
  type: object
  properties:
    end:
      $ref: "#/components/schemas/walletobjects_v1.Schema$DateTime"
      description: >-
        End time of the interval. Offset is not required. If an offset is
        provided and `start` time is set, `start` must also include an
        offset.
    kind:
      description: >-
        Identifies what kind of resource this is. Value: the fixed string
        `"walletobjects#timeInterval"`.
      anyOf:
        - type: string
        - type: "null"
    start:
      $ref: "#/components/schemas/walletobjects_v1.Schema$DateTime"
      description: >-
        Start time of the interval. Offset is not required. If an offset is
        provided and `end` time is set, `end` must also include an offset.
  additionalProperties: false
walletobjects_v1.Schema$DateTime:
  type: object
  properties:
    date:
      description: >-
        An ISO 8601 extended format date/time. Offset may or may not be
        required (refer to the parent field's documentation). Time may be
        specified up to nanosecond precision. Offsets may be specified with
        seconds precision (even though offset seconds is not part of ISO
        8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes
        and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC.
        `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds
        after the 19th hour of April 12th, 1985, 4 hours before UTC (same
        instant in time as the above example). If the date/time is intended
        for a physical location in New York, this would be the equivalent of
        Eastern Daylight Time (EDT). Remember that offset varies in regions
        that observe Daylight Saving Time (or Summer Time), depending on the
        time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and
        50.52 seconds after the 19th hour of April 12th, 1985 with no offset
        information. Providing an offset makes this an absolute instant in
        time around the world. The date/time will be adjusted based on the
        user's time zone. For example, a time of `2018-06-19T18:30:00-04:00`
        will be 18:30:00 for a user in New York and 15:30:00 for a user in
        Los Angeles. Omitting the offset makes this a local date/time,
        representing several instants in time around the world. The
        date/time will always be in the user's current time zone. For
        example, a time of `2018-06-19T18:30:00` will be 18:30:00 for a user
        in New York and also 18:30:00 for a user in Los Angeles. This is
        useful when the same local date/time should apply to many physical
        locations across several time zones.
      anyOf:
        - type: string
        - type: "null"
  additionalProperties: false
walletobjects_v1.Schema$LocalizedString:
  type: object
  properties:
    defaultValue:
      $ref: "#/components/schemas/walletobjects_v1.Schema$TranslatedString"
      description: >-
        Contains the string to be displayed if no appropriate translation is
        available.
    kind:
      description: >-
        Identifies what kind of resource this is. Value: the fixed string
        `"walletobjects#localizedString"`.
      anyOf:
        - type: string
        - type: "null"
    translatedValues:
      type: array
      items:
        $ref: "#/components/schemas/walletobjects_v1.Schema$TranslatedString"
      description: Contains the translations for the string.
  additionalProperties: false
walletobjects_v1.Schema$TranslatedString:
  type: object
  properties:
    kind:
      description: >-
        Identifies what kind of resource this is. Value: the fixed string
        `"walletobjects#translatedString"`.
      anyOf:
        - type: string
        - type: "null"
    language:
      description: >-
        Represents the BCP 47 language tag. Example values are "en-US",
        "en-GB", "de", or "de-AT".
      anyOf:
        - type: string
        - type: "null"
    value:
      description: The UTF-8 encoded translated string.
      anyOf:
        - type: string
        - type: "null"
  additionalProperties: false
walletobjects_v1.Schema$TextModuleData:
  type: object
  properties:
    body:
      description: >-
        The body of the Text Module, which is defined as an uninterrupted
        string. Recommended maximum length is 500 characters to ensure full
        string is displayed on smaller screens.
      anyOf:
        - type: string
        - type: "null"
    header:
      description: >-
        The header of the Text Module. Recommended maximum length is 35
        characters to ensure full string is displayed on smaller screens.
      anyOf:
        - type: string
        - type: "null"
    id:
      description: >-
        The ID associated with a text module. This field is here to enable
        ease of management of text modules.
      anyOf:
        - type: string
        - type: "null"
    localizedBody:
      $ref: "#/components/schemas/walletobjects_v1.Schema$LocalizedString"
      description: >-
        Translated strings for the body. Recommended maximum length is 500
        characters to ensure full string is displayed on smaller screens.
    localizedHeader:
      $ref: "#/components/schemas/walletobjects_v1.Schema$LocalizedString"
      description: >-
        Translated strings for the header. Recommended maximum length is 35
        characters to ensure full string is displayed on smaller screens.
  additionalProperties: false
  description: >-
    Data for Text module. All fields are optional. Header will be displayed
    if available, different types of bodies will be concatenated if they are
    defined.
walletobjects_v1.Schema$LinksModuleData:
  type: object
  properties:
    uris:
      type: array
      items:
        $ref: "#/components/schemas/walletobjects_v1.Schema$Uri"
      description: The list of URIs.
  additionalProperties: false
walletobjects_v1.Schema$Uri:
  type: object
  properties:
    description:
      description: >-
        The URI's title appearing in the app as text. Recommended maximum is
        20 characters to ensure full string is displayed on smaller screens.
        Note that in some contexts this text is not used, such as when
        `description` is part of an image.
      anyOf:
        - type: string
        - type: "null"
    id:
      description: >-
        The ID associated with a uri. This field is here to enable ease of
        management of uris.
      anyOf:
        - type: string
        - type: "null"
    kind:
      description: >-
        Identifies what kind of resource this is. Value: the fixed string
        `"walletobjects#uri"`.
      anyOf:
        - type: string
        - type: "null"
    localizedDescription:
      $ref: "#/components/schemas/walletobjects_v1.Schema$LocalizedString"
      description: >-
        Translated strings for the description. Recommended maximum is 20
        characters to ensure full string is displayed on smaller screens.
    uri:
      description: >-
        The location of a web page, image, or other resource. URIs in the
        `LinksModuleData` module can have different prefixes indicating the
        type of URI (a link to a web page, a link to a map, a telephone
        number, or an email address). URIs must have a scheme.
      anyOf:
        - type: string
        - type: "null"
  additionalProperties: false
walletobjects_v1.Schema$LatLongPoint:
  type: object
  properties:
    kind:
      description: >-
        Identifies what kind of resource this is. Value: the fixed string
        `"walletobjects#latLongPoint"`.
      anyOf:
        - type: string
        - type: "null"
    latitude:
      description: >-
        The latitude specified as any value in the range of -90.0 through
        +90.0, both inclusive. Values outside these bounds will be rejected.
      anyOf:
        - type: number
        - type: "null"
    longitude:
      description: >-
        The longitude specified in the range -180.0 through +180.0, both
        inclusive. Values outside these bounds will be rejected.
      anyOf:
        - type: number
        - type: "null"
  additionalProperties: false
